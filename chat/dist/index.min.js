var l=class{constructor(){this.callbacks={}}on(e,t){this.callbacks[e]=t}dispatch(e,t){let r=this.callbacks[e];r&&r(t)}off(e){this.callbacks[e]&&delete this.callbacks[e]}clearAllEvents(){this.callbacks={}}cleaEvents(e){e.forEach(t=>{this.off(t)})}};var m=(o,e)=>{let t=o.reduce((r,i)=>r.set(i[e],[...r.get(i[e])||[],i]),new Map);return Object.fromEntries(t)};var h=o=>({date:new Date(Number(BigInt(o)>>22n))}),y=o=>(BigInt(o.getTime())<<22n).toString();var w=(o,e=!0)=>{let t=[255&o>>24,255&o>>16,255&o>>8,255&o];return e&&t.reverse(),t},f=(o,e)=>Object.prototype.toString.call(o)==="[object "+e+"]",g=class{#e;#r;constructor(e){this.#e=0,this.#r=new DataView(e)}getU8(){let e=this.#r.getUint8(this.#e);return this.#e+=1,e}getFixedSeq(e){let t=this.#r.buffer.slice(this.#e,this.#e+e);return this.#e+=e,t}getSeq(){let e=this.getU32();return this.getFixedSeq(e)}getU32(){let e=this.#r.getUint32(this.#e,!0);return this.#e+=4,e}geti64(){let e=this.#r.getBigInt64(this.#e,!0);return this.#e+=8,e}getString(){let e=this.getSeq();return new TextDecoder().decode(e)}getRest(){return this.#r.buffer.slice(this.#e)}asString(e){return new TextDecoder().decode(e)}};var b=211,x=212,p=class{#e;#r;constructor(e){this.#e=e,this.#r=new l,this.#i()}#i(){this.#e.subscribe(b,e=>{try{let t=new g(e),r=t.getString(),i=t.getString(),s=t.geti64().toString(),a=t.getString(),{date:n}=h(s),c={channelId:r,userId:i,messageId:s,content:{},timestamp:n,type:"message"},d=JSON.parse(a).data,u=JSON.parse(d);u.dType==="text"?c.content.text=u.text:c.content.data=e,this.#r.dispatch("message",c)}catch(t){console.error("internal error, invalid incoming message",t)}}),this.#e.subscribe(x,e=>{e=JSON.parse(e);let{date:t}=h(e.message_id);this.#r.dispatch("activity",{channelId:e.channel_id,activityId:e.message_id,timestamp:t,info:e.info})})}#s(e){return f(e,"ArrayBuffer")?{id:new DataView(e).getBigInt64(0,!0).toString(),status:"sent"}:e}async#a(e,t){let r={};for(let n of e)r[n.name]=n;let i=Object.values(r).map(n=>({name:n.name,ftype:n.type,size:n.size})),s=await this.#e?.send(5,0,i).then(n=>n).catch(n=>({error:n})),a=[];for(let n of s.urls){if((await I(e[n.original_name],n.upload_url,t).then(d=>d).catch(d=>({error:d}))).error)return{error:"failed upload"};a.push(`${s.root}${n.new_name}`)}return{files:a}}async#t(e,t){return await this.#e.send(2,e,t)}on(e,t){this.#r.on(e,t)}#n(e,t){let r=new TextEncoder,i=r.encode(e),s=JSON.stringify(t),a=r.encode(s);return new Uint8Array([...w(i.byteLength),...i,...a])}async send(e,t){return new Promise(async(r,i)=>{let s={};if(typeof t=="string")s.data=JSON.stringify({dType:"text",text:t});else{let c=[];typeof t.data=="string"?s.data=JSON.stringify({dType:"text",text:t.data}):s.data=JSON.stringify({dType:"data",data:t.data}),c.length>0&&(s.files=c),t.replyTo&&(s.res_to=t.replyTo)}let a=this.#n(e,s),n=await this.#e.send(0,0,a,this.#s).then(c=>c).catch(c=>({error:c}));return n.error?i(n):r(n)})}async react(e,t,r){return new Promise(async(i,s)=>{let a={inner:{reaction:r,type:"Reaction"},res_to:t},n=this.#n(e,a),c=await this.#e.send(0,0,n,this.#s).then(d=>d).catch(d=>({error:d}));return c.error?s(c):i(c)})}async editMessage(e,t,r){try{return{status:!!(await this.#e.send(1,1,{channel_id:e,id:t,content:r})).status}}catch(i){throw i}}async deleteMessage(e,t,r=!0){let i="";r&&(i="soft");try{return{status:!!(await this.#e.send(1,0,{channel_id:e,id:t,content:i})).status}}catch(s){throw s}}async getMessages(e,t=50,r=void 0,i="forward"){r||(r=[]),typeof e!="string"&&(e=y(e));try{let s=await this.#t(6,{channels:r,start:e,limit:t,direction:i});if(s.error)throw s.error;let a=s.messages.map(n=>{let{date:c}=h(n.id),d=JSON.parse(n.content),u={userId:n.sender_id,channelId:n.channel_id,messageId:n.id,content:{text:""},timestamp:c,type:"message"};return d.dType==="text"?u.content.text=d.text:d.dType==="data"&&(u.content=d.data),u.userId==="_"&&(u.type="activity",u.activity=d,u.content={}),u});return m(a,"channelId")}catch(s){throw s}}static pluginId(){return"chats"}async create(e,t){try{return await this.#t(0,{id:e,users:[]}),t&&await this.configure(e,t),{status:!0}}catch(r){throw r}}async join(e){try{return await this.#t(2,e),{status:!0}}catch(t){throw t}}async leave(e){try{return await this.#t(3,e),{status:!0}}catch(t){throw t}}async delete(e,t){try{return await this.#t(1,e),{status:!0}}catch(r){throw r}}async addUsers(e,t){try{return await this.#t(10,{channel_id:e,user_ids:t}),{status:!0}}catch(r){throw r}}async delUsers(e,t){try{return await this.#t(11,{channel_id:e,user_ids:t}),{status:!0}}catch(r){throw r}}async modUsers(e,t,r){try{return await this.#t(12,{channel_id:e,mode:r,users:t}),{status:!0}}catch(i){throw i}}async getUsers(e){try{return await this.#t(7,e)}catch(t){throw t}}async configure(e,t){try{return await this.#t(13,{id:e,config:t}),{status:!0}}catch(r){throw r}}async list(e,t=!1){e||(e={});try{return t?this.#t(9,e):this.#t(8,e)}catch(r){throw r}}async update(e,t){if(!t)return{status:!1};try{return await this.#t(5,{id:e,data:t}),{status:!0}}catch(r){throw r}}async get(e){try{return await this.#t(4,e)}catch(t){throw t}}},I=(o,e,t)=>{let r=new XMLHttpRequest;if(t){let s=new l;s.on("progress",t),r.upload.addEventListener("progress",a=>{s.dispatch("progress",{filename:"",progress:Math.round(a.loaded/a.total*100)})})}return new Promise((s,a)=>{r.open("PUT",e);let n=new FormData;n.append("file",o),r.send(n),r.addEventListener("abort",()=>{a({error:"upload arborted"})}),r.addEventListener("error",()=>{a({error:"upload error"})}),r.addEventListener("load",()=>{s(r.response)})})};export{p as default};
