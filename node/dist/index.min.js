"use strict";var c=function(e,t,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof t=="function"?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(e,a):i?i.value=a:t.set(e,a),a},s=function(e,t,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof t=="function"?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(e):r?r.value:t.get(e)},o,h,n,l,_,d;import p from"node:crypto";import{sign as w}from"jsonwebtoken-esm";class m{constructor(t,a){o.add(this),h.set(this,void 0),n.set(this,void 0),c(this,h,t,"f"),c(this,n,a,"f")}createToken(t,a){return{token:w(t,s(this,n,"f"),{expiresIn:"1h",algorithm:"HS256",audience:"all"}),...s(this,o,"m",d).call(this)}}}h=new WeakMap,n=new WeakMap,o=new WeakSet,l=function(t){return t.toString("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")},_=function(t){return p.createHash("sha256").update(t).digest()},d=function(){let t=s(this,o,"m",l).call(this,p.randomBytes(32));return{code_challenge:s(this,o,"m",l).call(this,s(this,o,"m",_).call(this,t)),code_verifier:t}};export default m;
