"use strict";var h=(t,e,r)=>{if(!e.has(t))throw TypeError("Cannot "+r)};var d=(t,e,r)=>(h(t,e,"read from private field"),r?r.call(t):e.get(t)),n=(t,e,r)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,r)},p=(t,e,r,l)=>(h(t,e,"write to private field"),l?l.call(t,r):e.set(t,r),r);var i=(t,e,r)=>(h(t,e,"access private method"),r);var s,a,o,S,c,u,g,m;import f from"node:crypto";import{sign as k}from"jsonwebtoken-esm";class _{constructor(e,r){n(this,o);n(this,c);n(this,g);n(this,s,void 0);n(this,a,void 0);p(this,s,e),p(this,a,r)}createToken(e,r){return{token:k(e,d(this,a),{expiresIn:"1h",algorithm:"HS256",audience:"all"}),...i(this,g,m).call(this)}}}s=new WeakMap,a=new WeakMap,o=new WeakSet,S=function(e){return e.toString("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")},c=new WeakSet,u=function(e){return f.createHash("sha256").update(e).digest()},g=new WeakSet,m=function(){let e=i(this,o,S).call(this,f.randomBytes(32));return{code_challenge:i(this,o,S).call(this,i(this,c,u).call(this,e)),code_verifier:e}};export default _;
